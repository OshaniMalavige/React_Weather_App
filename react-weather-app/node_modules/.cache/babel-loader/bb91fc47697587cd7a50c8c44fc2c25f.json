{"ast":null,"code":"var _jsxFileName = \"G:\\\\LoonsLab\\\\react-weather-app\\\\src\\\\components\\\\Home.js\";\nimport React from 'react';\nimport '../App.css';\nimport WeatherBox from \"./WeatherBox\";\nimport WeeklyWeather from \"./WeeklyWeather\";\nimport MainWeatherWindow from \"./MainWeatherWindow\";\nimport CityInput from \"./CityInput\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined,\n      days: new Array(4),\n      weekDays: new Array(5)\n    };\n\n    this.updateState = data => {\n      const city = data.city.name;\n      const days = [];\n      const dayIndices = this.getDayIndices(data);\n\n      for (let i = 0; i < 4; i++) {\n        days.push({\n          date: data.list[dayIndices[i]].dt_txt,\n          weather_desc: data.list[dayIndices[i]].weather[0].description,\n          icon: data.list[dayIndices[i]].weather[0].icon,\n          temp: data.list[dayIndices[i]].main.temp\n        });\n      }\n\n      this.setState({\n        city: city,\n        days: days\n      });\n    };\n\n    this.makeApiCall = async city => {\n      const api_data = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \"&APPID=6557810176c36fac5f0db536711a6c52\")).then(resp => resp.json());\n\n      if (api_data.cod === '200') {\n        await this.updateState(api_data);\n        return true;\n      } else return false;\n    };\n\n    this.getDayIndices = data => {\n      let dayIndices = [];\n      dayIndices.push(0);\n      let index = 0;\n      let tmp = data.list[index].dt_txt.slice(8, 10);\n\n      for (let i = 0; i < 3; i++) {\n        while (tmp === data.list[index].dt_txt.slice(8, 10) || data.list[index].dt_txt.slice(11, 13) !== '15') {\n          index++;\n        }\n\n        dayIndices.push(index);\n        tmp = data.list[index].dt_txt.slice(8, 10);\n      }\n\n      return dayIndices;\n    };\n\n    this.updateWeeklyState = dataW => {\n      const city = dataW.city.name;\n      const weekDays = [];\n      const weekDayIndices = this.getWeekDayIndices(dataW);\n\n      for (let i = 0; i < 5; i++) {\n        weekDays.push({\n          date: dataW.list[weekDayIndices[i]].dt_txt,\n          weather_desc: dataW.list[weekDayIndices[i]].weather[0].description,\n          icon: dataW.list[weekDayIndices[i]].weather[0].icon,\n          temp: dataW.list[weekDayIndices[i]].main.temp\n        });\n      }\n\n      this.setState({\n        city: city,\n        weekDays: weekDays\n      });\n    };\n\n    this.getWeekDayIndices = dataW => {\n      let weekDayIndices = [];\n      weekDayIndices.push(0);\n      let indexW = 0;\n      let tmpW = dataW.list[indexW].dt_txt.slice(8, 10);\n\n      for (let i = 0; i < 4; i++) {\n        while (tmpW === dataW.list[indexW].dt_txt.slice(8, 10) || dataW.list[indexW].dt_txt.slice(11, 13) !== '15') {\n          indexW++;\n        }\n\n        weekDayIndices.push(indexW);\n        tmpW = dataW.list[indexW].dt_txt.slice(8, 10);\n      }\n\n      return weekDayIndices;\n    };\n\n    this.WeeklyWeatherFunc = async city => {\n      const api_dataW = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \"&APPID=6557810176c36fac5f0db536711a6c52\")).then(resp => resp.json());\n\n      if (api_dataW.cod === '200') {\n        await this.updateWeeklyState(api_dataW);\n        return true;\n      } else return false;\n    };\n  }\n\n  render() {\n    const WeatherBoxes = () => {\n      const weatherBoxes = this.state.days.slice(1).map(day => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(WeatherBox, Object.assign({}, day, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))));\n      return React.createElement(\"ul\", {\n        className: \"weather-box-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, weatherBoxes);\n    };\n\n    const WeeklyWeatherBoxes = () => {\n      const weeklyWeatherBoxes = this.state.weekDays.slice(1).map(weekDay => React.createElement(React.Fragment, null, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(WeeklyWeather, Object.assign({}, weekDay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })))));\n      return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"weather-box-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, weeklyWeatherBoxes));\n    };\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MainWeatherWindow, {\n      data: this.state.days[0],\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(CityInput, {\n      city: this.state.city,\n      makeApiCall: this.makeApiCall.bind(this),\n      WeeklyWeatherFunc: this.WeeklyWeatherFunc.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(WeatherBoxes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(WeeklyWeatherBoxes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["G:\\LoonsLab\\react-weather-app\\src\\components\\Home.js"],"names":["React","WeatherBox","WeeklyWeather","MainWeatherWindow","CityInput","Home","Component","state","city","undefined","days","Array","weekDays","updateState","data","name","dayIndices","getDayIndices","i","push","date","list","dt_txt","weather_desc","weather","description","icon","temp","main","setState","makeApiCall","api_data","fetch","then","resp","json","cod","index","tmp","slice","updateWeeklyState","dataW","weekDayIndices","getWeekDayIndices","indexW","tmpW","WeeklyWeatherFunc","api_dataW","render","WeatherBoxes","weatherBoxes","map","day","WeeklyWeatherBoxes","weeklyWeatherBoxes","weekDay","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport WeatherBox from \"./WeatherBox\";\r\nimport WeeklyWeather from \"./WeeklyWeather\";\r\nimport MainWeatherWindow from \"./MainWeatherWindow\";\r\nimport CityInput from \"./CityInput\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        city: undefined,\r\n        days: new Array(4),\r\n        weekDays: new Array(5),\r\n    };\r\n\r\n    /* next three days */\r\n    updateState = data => {\r\n        const city = data.city.name;\r\n        const days = [];\r\n        const dayIndices = this.getDayIndices(data);\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            days.push({\r\n                date: data.list[dayIndices[i]].dt_txt,\r\n                weather_desc: data.list[dayIndices[i]].weather[0].description,\r\n                icon: data.list[dayIndices[i]].weather[0].icon,\r\n                temp: data.list[dayIndices[i]].main.temp\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            city: city,\r\n            days: days\r\n        });\r\n    };\r\n\r\n    makeApiCall = async city => {\r\n        const api_data = await fetch(\r\n            `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=6557810176c36fac5f0db536711a6c52`\r\n        ).then(resp => resp.json());\r\n\r\n        if (api_data.cod === '200') {\r\n            await this.updateState(api_data);\r\n            return true;\r\n        } else return false;\r\n    };\r\n\r\n    getDayIndices = data => {\r\n        let dayIndices = [];\r\n        dayIndices.push(0);\r\n\r\n        let index = 0;\r\n        let tmp = data.list[index].dt_txt.slice(8, 10);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            while (\r\n                tmp === data.list[index].dt_txt.slice(8, 10) ||\r\n                data.list[index].dt_txt.slice(11, 13) !== '15'\r\n                ) {\r\n                index++;\r\n            }\r\n            dayIndices.push(index);\r\n            tmp = data.list[index].dt_txt.slice(8, 10);\r\n        }\r\n        return dayIndices;\r\n    };\r\n\r\n    /* Weekly Weather */\r\n    updateWeeklyState = dataW => {\r\n        const city = dataW.city.name;\r\n        const weekDays = [];\r\n        const weekDayIndices = this.getWeekDayIndices(dataW);\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            weekDays.push({\r\n                date: dataW.list[weekDayIndices[i]].dt_txt,\r\n                weather_desc: dataW.list[weekDayIndices[i]].weather[0].description,\r\n                icon: dataW.list[weekDayIndices[i]].weather[0].icon,\r\n                temp: dataW.list[weekDayIndices[i]].main.temp\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            city: city,\r\n            weekDays: weekDays\r\n        });\r\n    };\r\n\r\n    getWeekDayIndices = dataW => {\r\n        let weekDayIndices = [];\r\n        weekDayIndices.push(0);\r\n\r\n        let indexW = 0;\r\n        let tmpW = dataW.list[indexW].dt_txt.slice(8, 10);\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            while (\r\n                tmpW === dataW.list[indexW].dt_txt.slice(8, 10) ||\r\n                dataW.list[indexW].dt_txt.slice(11, 13) !== '15'\r\n                ) {\r\n                indexW++;\r\n            }\r\n            weekDayIndices.push(indexW);\r\n            tmpW = dataW.list[indexW].dt_txt.slice(8, 10);\r\n        }\r\n        return weekDayIndices;\r\n    };\r\n\r\n    WeeklyWeatherFunc = async city => {\r\n        const api_dataW = await fetch(\r\n            `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=6557810176c36fac5f0db536711a6c52`\r\n        ).then(resp => resp.json());\r\n\r\n        if (api_dataW.cod === '200') {\r\n            await this.updateWeeklyState(api_dataW);\r\n            return true;\r\n        } else return false;\r\n    };\r\n\r\n\r\n    render() {\r\n        const WeatherBoxes = () => {\r\n            const weatherBoxes = this.state.days.slice(1).map(day => (\r\n                <li>\r\n                    <WeatherBox {...day} />\r\n                </li>\r\n            ));\r\n\r\n            return <ul className='weather-box-list'>{weatherBoxes}</ul>;\r\n        };\r\n\r\n        const WeeklyWeatherBoxes = () => {\r\n            const weeklyWeatherBoxes = this.state.weekDays.slice(1).map(weekDay => (\r\n                <>\r\n                    <li>\r\n                        <WeeklyWeather {...weekDay} />\r\n                    </li>\r\n                </>\r\n            ));\r\n\r\n            return <><br/><ul className='weather-box-list'>{weeklyWeatherBoxes}</ul></>;\r\n        };\r\n\r\n        return (\r\n            <div className='App'>\r\n                <div className='App-header'>\r\n                    <MainWeatherWindow data={this.state.days[0]} city={this.state.city}>\r\n                        <CityInput city={this.state.city} makeApiCall={this.makeApiCall.bind(this)} WeeklyWeatherFunc={this.WeeklyWeatherFunc.bind(this)}/>\r\n                        <WeatherBoxes />\r\n                        <WeeklyWeatherBoxes/>\r\n                    </MainWeatherWindow>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}